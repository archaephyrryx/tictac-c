CFLAGS = -O -DFREEBNODES -Wall -Werror
#CFLAGS = -O -Wall -Werror
LDFLAGS = -lm

PROG = game
GENPROG = genboards
DATFILE = boards.dat
TEST = testmem testnode

OBJS = mem.o node.o err.o cdsSigma.o gameipc.o heuristics.c

all: game $(DATFILE)

clean:
	$(RM) $(PROG) $(GENPROG) $(TEST) $(DATFILE) *.o *.a

$(PROG): main.o $(OBJS)
	$(CC) -o $@ main.o $(OBJS) $(LDFLAGS)

$(GENPROG): $(GENPROG).o
	$(CC) -o $@ $(GENPROG).o $(OBJS) $(LDFLAGS)

$(DATFILE): $(GENPROG)
	./$(GENPROG) > $(DATFILE).tmp
	mv $(DATFILE).tmp $(DATFILE)

testmem: testmem.o $(OBJS)
	$(CC) -o $@ testmem.o $(OBJS) $(LDFLAGS)

testnode: testnode.o $(OBJS)
	$(CC) -o $@ testnode.o $(OBJS) $(LDFLAGS)

test: $(TEST) $(DATFILE)
	@echo testing mem.c; ./testmem
	@echo testing node.c; n=$$(./testnode $(DATFILE)) && [ "$$n" -eq "$$(wc -l < $(DATFILE))" ]
	@echo all tests passed

depend: $(MAKES)
	(sed '1,/^# do not edit/!d' Makefile; \
	set -e; for i in [a-z][a-z0-9]*.c; do \
	    $(CC) -E $(DEFS) $(INCL) $$i | grep -v '[<>]' | sed -n -e '/^# *1 *"\([^"]*\)".*/{' \
	    -e 's//'`echo $$i|sed 's/c$$/o/'`': \1/' \
	    -e 's/o: \.\//o: /' -e p -e '}' ; \
	done | sort -u) | grep -v '[.][o][:][ ][/]' >$$$$ && mv $$$$ Makefile

# do not edit below this line - it is generated by 'make depend'
cdsSigma.o: cdsSigma.c
cdsSigma.o: cdsSigma.h
cdsSigma.o: err.h
cdsSigma.o: heuristics.h
cdsSigma.o: node.h
err.o: err.c
err.o: err.h
gameipc.o: err.h
gameipc.o: gameipc.c
gameipc.o: gameipc.h
gameipc.o: node.h
genboards.o: err.h
genboards.o: genboards.c
genboards.o: node.h
heuristics.o: game.h
heuristics.o: heuristics.c
heuristics.o: heuristics.h
heuristics.o: node.h
main.o: cdsSigma.h
main.o: err.h
main.o: game.h
main.o: gameipc.h
main.o: main.c
main.o: node.h
mem.o: err.h
mem.o: mem.c
mem.o: mem.h
node.o: err.h
node.o: game.h
node.o: mem.h
node.o: node.c
node.o: node.h
testmem.o: err.h
testmem.o: mem.h
testmem.o: testmem.c
testnode.o: err.h
testnode.o: node.h
testnode.o: testnode.c
